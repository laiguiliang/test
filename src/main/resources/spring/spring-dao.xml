<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">
		
		<!-- 配置整合mybatis过程 -->
		<!-- 1:配置数据库相关参数 properties的属性:${url} 
		<context:property-placeholder  location="classpath:jdbc.properties"/>
		-->
		
		<util:properties id="jdbc" location="classpath:jdbc.properties"/>
		
		<!-- 2:数据库连接池 -->
		<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
			<!-- 配置连接池属性 -->
			<property name="driverClass" value="#{jdbc.driver}"></property>
			<property name="jdbcUrl" value="#{jdbc.url}"></property>
			<property name="user" value="#{jdbc.username}"></property>
			<property name="password" value="#{jdbc.password}"></property>
			<!-- 
			<property name="driverClass" value="com.mysql.jdbc.Driver"></property>
			<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/seckill"></property>
			<property name="user" value="root"></property>
			<property name="password" value=""></property>
			 -->
			
			<!-- c3p0连接池的私有属性 -->
			<property name="maxPoolSize" value="30" />
			<property name="minPoolSize" value="30" />
			<!-- 关闭连接后不自动commit -->
			<property name="autoCommitOnClose" value="false" />
			<!-- 获取连接超时时间 -->
			<property name="checkoutTimeout" value="1000"/>
			<!-- 当获取连接失败重试次数 -->
			<property name="acquireRetryAttempts" value="3"/>
		</bean>
		
		<!-- 约定大于配置 -->
		<!-- 3：配置SqlSessionFactory对象 -->
		<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
			<!-- 注入数据库连接池 -->
			<property name="dataSource" ref="dataSource"/>
			<!-- 配置MyBatis全局配置文件：mybatis-config.xml -->
			<property name="configLocation" value="classpath:mybatis-config.xml" />
			<!-- 扫描entity包，使用别名org.seckill.entity.Seckill ->SecKill 
				value 值为多个包的时候，用 ; 间隔 -->
			<!--<property name="typeAliasesPackage" value="org.seckill.entity;org.seckill.entity2"/>-->
			<property name="typeAliasesPackage" value="org.seckill.entity"/> 
			<!-- 扫描sql配置文件：mapper需要的xml文件 -->
			<property name="mapperLocations" value="classpath:mapper/*.xml" />
		</bean>		
		
		<!-- 4:配置扫描Dao接口包，动态实现Dao接口，并注入到Spring容器中 -->
		<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			<!-- 注入sqlSessionFactory属性 sqlSessionFactoryBeanName 防止，先加载了 sqlSessionFactory，但没加载配置文件 -->
			<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
			<!-- 给出需要扫描Dao接口包 -->
			<property name="basePackage" value="org.seckill.dao" />		
			<property name="annotationClass" value="org.seckill.mapper.MyBatisMapper"/>
		</bean>
		
		<bean id="redisDao" class="org.seckill.dao.cache.RedisDao">
			<constructor-arg index="0" value="localhost" />
			<constructor-arg index="1" value="6379" />
		</bean>

</beans>